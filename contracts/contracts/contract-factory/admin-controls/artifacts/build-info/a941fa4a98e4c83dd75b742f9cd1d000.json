{
	"id": "a941fa4a98e4c83dd75b742f9cd1d000",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-creator/contracts/admin-controls/AdminControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.17;\r\n\r\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"./IAdminControl.sol\";\r\n\r\nabstract contract AdminControl is Initializable, OwnableUpgradeable, IAdminControl, ERC165 {\r\n    using EnumerableSetUpgradeable for EnumerableSetUpgradeable.AddressSet;\r\n\r\n    EnumerableSetUpgradeable.AddressSet private _admins;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return interfaceId == type(IAdminControl).interfaceId\r\n            || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    modifier adminRequired() {\r\n        require(owner() == msg.sender || _admins.contains(msg.sender), \"AdminControl: Must be owner or admin\");\r\n        _;\r\n    }   \r\n\r\n    function isAdmin(address admin) public override view returns (bool) {\r\n        return (owner() == admin || _admins.contains(admin));\r\n    }\r\n\r\n    function getAdmins() external view override returns (address[] memory admins) {\r\n        admins = new address[](_admins.length());\r\n        for (uint i = 0; i < _admins.length(); i++) {\r\n            admins[i] = _admins.at(i);\r\n        }\r\n        return admins;\r\n    }\r\n\r\n    function approveAdmin(address admin) external override onlyOwner {\r\n        if (!_admins.contains(admin)) {\r\n            emit AdminApproved(admin, msg.sender);\r\n            _admins.add(admin);\r\n        }\r\n    }\r\n\r\n    function revokeAdmin(address admin) external override onlyOwner {\r\n        if (_admins.contains(admin)) {\r\n            emit AdminRevoked(admin, msg.sender);\r\n            _admins.remove(admin);\r\n        }\r\n    }\r\n}"
			},
			"contract-creator/contracts/admin-controls/IAdminControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/// @author: leftbrain\r\n\r\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Interface for admin control\r\n */\r\ninterface IAdminControl is IERC165 {\r\n\r\n    event AdminApproved(address indexed account, address indexed sender);\r\n    event AdminRevoked(address indexed account, address indexed sender);\r\n\r\n    function isAdmin(address admin) external view returns (bool);\r\n    function getAdmins() external view returns (address[] memory);\r\n    function approveAdmin(address admin) external;\r\n    function revokeAdmin(address admin) external;\r\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSetUpgradeable {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH PUSH13 0x2DA6EA54C727FE88902C530E9 CREATE2 0xF7 DUP1 PUSH16 0xAB57E7F2579E3FCED1B9EA07264736F PUSH13 0x63430008110033000000000000 ",
							"sourceMap": "194:9180:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220406c02da6ea54c727fe88902c530e9f5f7806f0ab57e7f2579e3fced1b9ea07264736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contract-creator/contracts/admin-controls/AdminControl.sol",
								"contract-creator/contracts/admin-controls/IAdminControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 715,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
				"EnumerableSetUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":1329:12970  library EnumerableSetUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":1329:12970  library EnumerableSetUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab68d0e7e73c41e9d38811fea34b9ca02085b6066706f670e0583ae58b3e94ed64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab68d0e7e73c41e9d38811fea34b9ca02085b6066706f670e0583ae58b3e94ed64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH9 0xD0E7E73C41E9D38811 INVALID LOG3 0x4B SWAP13 LOG0 KECCAK256 DUP6 0xB6 MOD PUSH8 0x6F670E0583AE58B RETURNDATACOPY SWAP5 0xED PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1329:11641:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab68d0e7e73c41e9d38811fea34b9ca02085b6066706f670e0583ae58b3e94ed64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH9 0xD0E7E73C41E9D38811 INVALID LOG3 0x4B SWAP13 LOG0 KECCAK256 DUP6 0xB6 MOD PUSH8 0x6F670E0583AE58B RETURNDATACOPY SWAP5 0xED PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1329:11641:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSetUpgradeable.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSetUpgradeable.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSetUpgradeable.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSetUpgradeable.Set storage pointer)": "infinite",
								"add(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSetUpgradeable.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSetUpgradeable.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSetUpgradeable.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSetUpgradeable.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSetUpgradeable.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSetUpgradeable.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSetUpgradeable.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSetUpgradeable.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 12970,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab68d0e7e73c41e9d38811fea34b9ca02085b6066706f670e0583ae58b3e94ed64736f6c63430008110033",
									".code": [
										{
											"begin": 1329,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1329,
											"end": 12970,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contract-creator/contracts/admin-controls/AdminControl.sol",
								"contract-creator/contracts/admin-controls/IAdminControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":\"EnumerableSetUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-creator/contracts/admin-controls/AdminControl.sol": {
				"AdminControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "AdminApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "AdminRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "approveAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAdmins",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "admins",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "revokeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approveAdmin(address)": "6d73e669",
							"getAdmins()": "31ae450b",
							"isAdmin(address)": "24d7806c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"revokeAdmin(address)": "2d345670",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AdminApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AdminRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"approveAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"admins\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-creator/contracts/admin-controls/AdminControl.sol\":\"AdminControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contract-creator/contracts/admin-controls/AdminControl.sol\":{\"keccak256\":\"0xc79241761c9a78946925314ce46280356df5bf3e0cc8fad25483d68d7ae58eb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa11104747f9c3f55832d647da7b1e5c9261bd6fc1c52320f24c4d3e70537c84\",\"dweb:/ipfs/QmQkzKhV71vLxj1YfHcQdberY1rMmrDUABePAu2vxHzv8D\"]},\"contract-creator/contracts/admin-controls/IAdminControl.sol\":{\"keccak256\":\"0xece708591962db511961080530b340862f424ffd26f0736d1954a5ab305e6aa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c250aa216c3c408dbf8f98ab83a036d5c2f37ed1499f5412131ba945bb4203\",\"dweb:/ipfs/QmVdiiWAAJBnbGLBnkVFvgj19VDeBCfYcmFTxQyoRkvhA8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 671,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1400,
								"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
								"label": "_admins",
								"offset": 0,
								"slot": "101",
								"type": "t_struct(AddressSet)1054_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1054_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.AddressSet",
								"members": [
									{
										"astId": 1053,
										"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)739_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)739_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSetUpgradeable.Set",
								"members": [
									{
										"astId": 734,
										"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 738,
										"contract": "contract-creator/contracts/admin-controls/AdminControl.sol:AdminControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contract-creator/contracts/admin-controls/IAdminControl.sol": {
				"IAdminControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "AdminApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "AdminRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "approveAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAdmins",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "revokeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for admin control",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approveAdmin(address)": "6d73e669",
							"getAdmins()": "31ae450b",
							"isAdmin(address)": "24d7806c",
							"revokeAdmin(address)": "2d345670",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AdminApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"AdminRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"approveAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"revokeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for admin control\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-creator/contracts/admin-controls/IAdminControl.sol\":\"IAdminControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contract-creator/contracts/admin-controls/IAdminControl.sol\":{\"keccak256\":\"0xece708591962db511961080530b340862f424ffd26f0736d1954a5ab305e6aa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c250aa216c3c408dbf8f98ab83a036d5c2f37ed1499f5412131ba945bb4203\",\"dweb:/ipfs/QmVdiiWAAJBnbGLBnkVFvgj19VDeBCfYcmFTxQyoRkvhA8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"ContextUpgradeable": [
							672
						],
						"Initializable": [
							300
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 673,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 301,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nameLocations": [
											"748:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 672,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								672,
								300
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 657,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2118:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:0"
									},
									"scope": 131,
									"src": "2064:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2384:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2402:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2477:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:0"
									},
									"scope": 131,
									"src": "2314:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2729:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2739:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2758:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2774:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2783:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2827:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2837:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2806:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2801:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:0"
									},
									"scope": 131,
									"src": "2666:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3118:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2438:0",
							"usedErrors": []
						}
					],
					"src": "102:3045:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"Initializable": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 301,
							"sourceUnit": 631,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Initializable",
							"nameLocation": "2412:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2546:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2675:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2809:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2821:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:1"
									},
									"src": "2803:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3269:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3302:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3347:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3365:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 630,
																						"src": "3388:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$630_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:1",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 318,
																					"src": "3388:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3436:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3536:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3566:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3562:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3582:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3596:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3651:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3647:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3667:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3681:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3721:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3716:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3255:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:1"
									},
									"src": "3246:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4863:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4882:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4899:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4914:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4982:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4997:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5014:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5055:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5103:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5091:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "5086:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4834:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4848:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:1"
									},
									"src": "4825:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "5356:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5374:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:1"
									},
									"src": "5328:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5988:231:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "6007:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "6078:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "6074:139:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "6111:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "6125:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6174:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "6169:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:1"
									},
									"scope": 300,
									"src": "5939:280:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "6393:36:1",
										"statements": [
											{
												"expression": {
													"id": 287,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "6410:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 286,
												"id": 288,
												"nodeType": "Return",
												"src": "6403:19:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6386:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:1"
									},
									"scope": 300,
									"src": "6329:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "6601:37:1",
										"statements": [
											{
												"expression": {
													"id": 296,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "6618:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "6611:20:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "6595:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:1"
									},
									"scope": 300,
									"src": "6545:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "2394:4246:1",
							"usedErrors": []
						}
					],
					"src": "113:6528:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1489:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 311,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1713:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 310,
												"id": 316,
												"nodeType": "Return",
												"src": "1706:30:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1443:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1483:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:2"
									},
									"scope": 630,
									"src": "1423:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2729:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 329,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 327,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2772:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:2"
											},
											{
												"assignments": [
													338,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "2824:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 337,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 339,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "2842:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2864:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2893:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2677:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2704:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:2"
									},
									"scope": 630,
									"src": "2658:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3801:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3840:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3848:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 362,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "3818:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 368,
												"nodeType": "Return",
												"src": "3811:79:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3734:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3750:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3787:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:2"
									},
									"scope": 630,
									"src": "3712:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4266:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4305:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4313:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4322:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4283:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 381,
												"id": 388,
												"nodeType": "Return",
												"src": "4276:59:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4150:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4174:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4201:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4252:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:2"
									},
									"scope": 630,
									"src": "4119:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4817:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4856:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4864:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 402,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4834:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 401,
												"id": 408,
												"nodeType": "Return",
												"src": "4827:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4735:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4751:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4770:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4803:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:2"
									},
									"scope": 630,
									"src": "4704:224:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "5355:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$630",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:2",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5398:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:2"
											},
											{
												"assignments": [
													436,
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5457:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5471:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 437,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5524:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 439,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5498:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:2",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 441,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5517:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5573:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "5590:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5602:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 446,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "5546:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 452,
												"nodeType": "Return",
												"src": "5539:76:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5216:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5240:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5290:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5341:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:2"
									},
									"scope": 630,
									"src": "5176:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5899:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5935:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5943:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 464,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															500
														],
														"referencedDeclaration": 500,
														"src": "5916:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "5909:80:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5827:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5843:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5885:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:2"
									},
									"scope": 630,
									"src": "5799:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "6338:168:2",
										"statements": [
											{
												"assignments": [
													484,
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6349:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6363:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 485,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 487,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6390:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6457:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6474:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6486:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 492,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "6430:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 498,
												"nodeType": "Return",
												"src": "6423:76:2"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6217:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6241:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6268:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6324:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:2"
									},
									"scope": 630,
									"src": "6180:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6782:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "6820:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6828:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 510,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															517,
															546
														],
														"referencedDeclaration": 546,
														"src": "6799:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 509,
												"id": 515,
												"nodeType": "Return",
												"src": "6792:84:2"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6715:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6731:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 504,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:2"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6768:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:2"
									},
									"scope": 630,
									"src": "6685:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "7224:170:2",
										"statements": [
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "7235:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 545,
														"src": "7249:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"initialValue": {
													"arguments": [
														{
															"id": 535,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "7296:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 533,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "7276:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:2",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "7345:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "7353:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 541,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7362:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 542,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "7374:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 538,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "7318:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 528,
												"id": 544,
												"nodeType": "Return",
												"src": "7311:76:2"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7108:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7132:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7159:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 523,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:2"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "7210:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:2"
									},
									"scope": 630,
									"src": "7069:325:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "7876:434:2",
										"statements": [
											{
												"condition": {
													"id": 560,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "7890:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "8246:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 578,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "8268:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 579,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "8280:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 577,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "8260:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:2"
														}
													]
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "7886:418:2",
												"trueBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "7899:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 561,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 553,
																		"src": "7917:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 573,
															"nodeType": "IfStatement",
															"src": "7913:286:2",
															"trueBody": {
																"id": 572,
																"nodeType": "Block",
																"src": "7941:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 567,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 549,
																							"src": "8143:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 566,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "8132:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 568,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 565,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 571,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 574,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "8219:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 559,
															"id": 575,
															"nodeType": "Return",
															"src": "8212:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7727:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7751:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7773:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7806:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "7862:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 557,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:2"
									},
									"scope": 630,
									"src": "7682:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "8691:135:2",
										"statements": [
											{
												"condition": {
													"id": 597,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "8705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 606,
													"nodeType": "Block",
													"src": "8762:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 602,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 590,
																		"src": "8784:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 603,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "8796:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 601,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "8776:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 605,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:2"
														}
													]
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "8701:119:2",
												"trueBody": {
													"id": 600,
													"nodeType": "Block",
													"src": "8714:42:2",
													"statements": [
														{
															"expression": {
																"id": 598,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "8735:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 596,
															"id": 599,
															"nodeType": "Return",
															"src": "8728:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8566:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 587,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8588:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8621:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "8677:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:2"
									},
									"scope": 630,
									"src": "8531:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "8915:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "8991:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "9321:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 623,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "9342:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 622,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 625,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:2"
														}
													]
												},
												"id": 627,
												"nodeType": "IfStatement",
												"src": "8987:379:2",
												"trueBody": {
													"id": 621,
													"nodeType": "Block",
													"src": "9014:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 611,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 611,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:2",
																	"valueSize": 1
																}
															],
															"id": 620,
															"nodeType": "InlineAssembly",
															"src": "9163:142:2"
														}
													]
												}
											}
										]
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "8849:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "8874:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 612,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:2"
									},
									"scope": 630,
									"src": "8832:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "194:9180:2",
							"usedErrors": []
						}
					],
					"src": "101:9274:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"ContextUpgradeable": [
							672
						],
						"Initializable": [
							300
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 633,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 301,
							"src": "110:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 635,
										"name": "Initializable",
										"nameLocations": [
											"691:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "691:13:3"
									},
									"id": 636,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								300
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "763:7:3",
										"statements": []
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 639,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 638,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:3"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:3"
									},
									"scope": 672,
									"src": "711:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "838:7:3",
										"statements": []
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 645,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 644,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:3"
									},
									"scope": 672,
									"src": "776:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "912:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 653,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 655,
												"nodeType": "Return",
												"src": "922:17:3"
											}
										]
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "903:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:3"
									},
									"scope": 672,
									"src": "850:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "1019:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 662,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 661,
												"id": 664,
												"nodeType": "Return",
												"src": "1029:15:3"
											}
										]
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "1003:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:3"
									},
									"scope": 672,
									"src": "952:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 671,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 672,
									"src": "1316:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 668,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 670,
										"length": {
											"hexValue": "3530",
											"id": 669,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 673,
							"src": "651:693:3",
							"usedErrors": []
						}
					],
					"src": "86:1259:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"ERC165Upgradeable": [
							716
						],
						"IERC165Upgradeable": [
							728
						],
						"Initializable": [
							300
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 729,
							"src": "124:34:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 301,
							"src": "159:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "Initializable",
										"nameLocations": [
											"822:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "822:13:4"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:4"
								},
								{
									"baseName": {
										"id": 680,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"837:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "837:18:4"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:4"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								728,
								300
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "913:7:4",
										"statements": []
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 683,
												"name": "onlyInitializing",
												"nameLocations": [
													"896:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "896:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:4"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:4"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:4"
									},
									"scope": 716,
									"src": "862:58:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "987:7:4",
										"statements": []
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 690,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 689,
												"name": "onlyInitializing",
												"nameLocations": [
													"970:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "970:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:4"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:4"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:4"
									},
									"scope": 716,
									"src": "926:68:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										727
									],
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1151:75:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1168:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 704,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "1188:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$728_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$728_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 703,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$728",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1208:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 701,
												"id": 708,
												"nodeType": "Return",
												"src": "1161:58:4"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 698,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:4"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1087:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 695,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1145:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:4"
									},
									"scope": 716,
									"src": "1060:166:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 715,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1491:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 712,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 714,
										"length": {
											"hexValue": "3530",
											"id": 713,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 717,
							"src": "783:736:4",
							"usedErrors": []
						}
					],
					"src": "99:1421:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 728,
							"linearizedBaseContracts": [
								728
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 727,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "812:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 721,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:5"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "855:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:5"
									},
									"scope": 728,
									"src": "785:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 729,
							"src": "405:458:5",
							"usedErrors": []
						}
					],
					"src": "100:764:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
					"exportedSymbols": {
						"EnumerableSetUpgradeable": [
							1341
						]
					},
					"id": 1342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "205:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSetUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "230:1098:6",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1341,
							"linearizedBaseContracts": [
								1341
							],
							"name": "EnumerableSetUpgradeable",
							"nameLocation": "1337:24:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSetUpgradeable.Set",
									"id": 739,
									"members": [
										{
											"constant": false,
											"id": 734,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1872:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 739,
											"src": "1862:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 732,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 733,
												"nodeType": "ArrayTypeName",
												"src": "1862:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "2040:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 739,
											"src": "2012:36:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 737,
												"keyType": {
													"id": 735,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2012:27:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1815:3:6",
									"nodeType": "StructDefinition",
									"scope": 1341,
									"src": "1808:247:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "2294:335:6",
										"statements": [
											{
												"condition": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2308:22:6",
													"subExpression": {
														"arguments": [
															{
																"id": 751,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "2319:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																}
															},
															{
																"id": 752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 745,
																"src": "2324:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 750,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "2309:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2309:21:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 778,
													"nodeType": "Block",
													"src": "2586:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2607:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 749,
															"id": 777,
															"nodeType": "Return",
															"src": "2600:12:6"
														}
													]
												},
												"id": 779,
												"nodeType": "IfStatement",
												"src": "2304:319:6",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "2332:248:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 760,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "2363:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 755,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2346:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "2346:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:4:6",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2346:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2346:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 762,
															"nodeType": "ExpressionStatement",
															"src": "2346:23:6"
														},
														{
															"expression": {
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 763,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2504:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 766,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2508:8:6",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 738,
																		"src": "2504:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 767,
																	"indexExpression": {
																		"id": 765,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 745,
																		"src": "2517:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2504:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 768,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 743,
																			"src": "2526:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2530:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "2526:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2538:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2526:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2504:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "2504:40:6"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2565:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 749,
															"id": 774,
															"nodeType": "Return",
															"src": "2558:11:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2061:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2234:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2251:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2239:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 741,
														"name": "Set",
														"nameLocations": [
															"2239:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "2239:3:6"
													},
													"referencedDeclaration": 739,
													"src": "2239:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2238:32:6"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2288:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2288:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2287:6:6"
									},
									"scope": 1341,
									"src": "2225:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "2869:1316:6",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2987:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "2979:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 794,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "3000:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3004:8:6",
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 738,
														"src": "3000:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 797,
													"indexExpression": {
														"id": 796,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "3013:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3000:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2979:40:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3034:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3048:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3034:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "4142:37:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4163:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 791,
															"id": 861,
															"nodeType": "Return",
															"src": "4156:12:6"
														}
													]
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "3030:1149:6",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "3051:1085:6",
													"statements": [
														{
															"assignments": [
																803
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 803,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3411:13:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 859,
																	"src": "3403:21:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 802,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3403:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 807,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 804,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "3427:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3440:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3427:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3403:38:6"
														},
														{
															"assignments": [
																809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 809,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3463:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 859,
																	"src": "3455:17:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 808,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3455:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 815,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 810,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "3475:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3479:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "3475:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3487:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3475:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3496:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3475:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3455:42:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 816,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "3516:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 817,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "3529:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3516:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "3512:398:6",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "3544:366:6",
																"statements": [
																	{
																		"assignments": [
																			820
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 820,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3570:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 842,
																				"src": "3562:17:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 819,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3562:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 825,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 821,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "3582:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																						"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																					}
																				},
																				"id": 822,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3586:7:6",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 734,
																				"src": "3582:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 824,
																			"indexExpression": {
																				"id": 823,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 809,
																				"src": "3594:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3582:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3562:42:6"
																	},
																	{
																		"expression": {
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 826,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 785,
																						"src": "3704:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																							"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																						}
																					},
																					"id": 829,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3708:7:6",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 734,
																					"src": "3704:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 830,
																				"indexExpression": {
																					"id": 828,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 803,
																					"src": "3716:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3704:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 831,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "3733:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3704:38:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 833,
																		"nodeType": "ExpressionStatement",
																		"src": "3704:38:6"
																	},
																	{
																		"expression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 834,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 785,
																						"src": "3816:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																							"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																						}
																					},
																					"id": 837,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3820:8:6",
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 738,
																					"src": "3816:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 838,
																				"indexExpression": {
																					"id": 836,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "3829:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3816:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 839,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "3842:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3816:36:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "3816:36:6"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 844,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "3988:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3992:7:6",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 734,
																		"src": "3988:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4000:3:6",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3988:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3988:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 850,
															"nodeType": "ExpressionStatement",
															"src": "3988:17:6"
														},
														{
															"expression": {
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4073:26:6",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 851,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 785,
																			"src": "4080:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																				"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																			}
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4084:8:6",
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 738,
																		"src": "4080:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 854,
																	"indexExpression": {
																		"id": 853,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "4093:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4080:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 856,
															"nodeType": "ExpressionStatement",
															"src": "4073:26:6"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4121:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 791,
															"id": 858,
															"nodeType": "Return",
															"src": "4114:11:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "2635:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2806:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2826:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2814:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 783,
														"name": "Set",
														"nameLocations": [
															"2814:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "2814:3:6"
													},
													"referencedDeclaration": 739,
													"src": "2814:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2839:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2831:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2831:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:32:6"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "2863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2862:6:6"
									},
									"scope": 1341,
									"src": "2797:1388:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "4345:48:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 876,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 869,
																"src": "4362:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4366:8:6",
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 738,
															"src": "4362:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 879,
														"indexExpression": {
															"id": 878,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "4375:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4362:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4362:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 875,
												"id": 882,
												"nodeType": "Return",
												"src": "4355:31:6"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "4191:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4275:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4297:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4285:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 867,
														"name": "Set",
														"nameLocations": [
															"4285:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "4285:3:6"
													},
													"referencedDeclaration": 739,
													"src": "4285:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4310:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4302:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 870,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4302:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:32:6"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "4339:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4339:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:6:6"
									},
									"scope": 1341,
									"src": "4266:127:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "4539:42:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 893,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4556:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:6",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "4556:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:6",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 892,
												"id": 896,
												"nodeType": "Return",
												"src": "4549:25:6"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:6",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "4491:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 886,
														"name": "Set",
														"nameLocations": [
															"4491:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "4491:3:6"
													},
													"referencedDeclaration": 739,
													"src": "4491:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:6"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "4530:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:6"
									},
									"scope": 1341,
									"src": "4474:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "4999:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 909,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "5016:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
																"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:6",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 734,
														"src": "5016:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 912,
													"indexExpression": {
														"id": 911,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "5028:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 908,
												"id": 913,
												"nodeType": "Return",
												"src": "5009:25:6"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4936:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 900,
														"name": "Set",
														"nameLocations": [
															"4936:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "4936:3:6"
													},
													"referencedDeclaration": 739,
													"src": "4936:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4953:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:6"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "4990:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:6"
									},
									"scope": 1341,
									"src": "4923:118:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "5655:35:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 925,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "5672:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
															"typeString": "struct EnumerableSetUpgradeable.Set storage pointer"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:6",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 734,
													"src": "5672:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 924,
												"id": 927,
												"nodeType": "Return",
												"src": "5665:18:6"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5598:15:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "Set",
														"nameLocations": [
															"5598:3:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 739,
														"src": "5598:3:6"
													},
													"referencedDeclaration": 739,
													"src": "5598:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:6"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5637:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 921,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 922,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:6"
									},
									"scope": 1341,
									"src": "5581:109:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.Bytes32Set",
									"id": 933,
									"members": [
										{
											"constant": false,
											"id": 932,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 933,
											"src": "5743:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"id": 931,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 930,
													"name": "Set",
													"nameLocations": [
														"5743:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 739,
													"src": "5743:3:6"
												},
												"referencedDeclaration": 739,
												"src": "5743:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:6",
									"nodeType": "StructDefinition",
									"scope": 1341,
									"src": "5715:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "6006:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 945,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "6028:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "6028:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"id": 947,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "6040:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 944,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "6023:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 943,
												"id": 949,
												"nodeType": "Return",
												"src": "6016:30:6"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5943:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 935,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "5943:10:6"
													},
													"referencedDeclaration": 933,
													"src": "5943:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5967:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 938,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "6000:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 941,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:6"
									},
									"scope": 1341,
									"src": "5930:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "6300:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 963,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "6325:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "6325:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"id": 965,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "6337:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 962,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "6317:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 961,
												"id": 967,
												"nodeType": "Return",
												"src": "6310:33:6"
											}
										]
									},
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6237:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "6237:10:6"
													},
													"referencedDeclaration": 933,
													"src": "6237:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6261:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "6294:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:6"
									},
									"scope": 1341,
									"src": "6221:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "6517:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 981,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "6544:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 982,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "6544:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"id": 983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "6556:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 980,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "6534:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 979,
												"id": 985,
												"nodeType": "Return",
												"src": "6527:35:6"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6449:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 971,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "6449:10:6"
													},
													"referencedDeclaration": 933,
													"src": "6449:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6473:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 974,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:6"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "6511:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:6"
									},
									"scope": 1341,
									"src": "6431:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "6722:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 997,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "6747:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "6747:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 996,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "6739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 995,
												"id": 1000,
												"nodeType": "Return",
												"src": "6732:26:6"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6666:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 989,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "6666:10:6"
													},
													"referencedDeclaration": 933,
													"src": "6666:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "6713:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:6"
									},
									"scope": 1341,
									"src": "6650:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "7190:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1014,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "7211:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "7211:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"id": 1016,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "7223:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "7207:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1018,
												"nodeType": "Return",
												"src": "7200:29:6"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "7119:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 1005,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1004,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "7119:10:6"
													},
													"referencedDeclaration": 933,
													"src": "7119:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "7143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "7181:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:6"
									},
									"scope": 1341,
									"src": "7107:129:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "7857:219:6",
										"statements": [
											{
												"assignments": [
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "7867:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1032,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1033,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1036,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "7900:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.Bytes32Set storage pointer"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 932,
															"src": "7900:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1035,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "7892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:6"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "7921:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1042,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1043,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1045,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8007:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8021:15:6",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8031:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1044,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1034,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:6",
														"valueSize": 1
													}
												],
												"id": 1046,
												"nodeType": "InlineAssembly",
												"src": "7998:48:6"
											},
											{
												"expression": {
													"id": 1047,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1044,
													"src": "8063:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1029,
												"id": 1048,
												"nodeType": "Return",
												"src": "8056:13:6"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7792:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
												},
												"typeName": {
													"id": 1023,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1022,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 933,
														"src": "7792:10:6"
													},
													"referencedDeclaration": 933,
													"src": "7792:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$933_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:6"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7839:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1026,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1027,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:6"
									},
									"scope": 1341,
									"src": "7776:300:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.AddressSet",
									"id": 1054,
									"members": [
										{
											"constant": false,
											"id": 1053,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1054,
											"src": "8129:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"id": 1052,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1051,
													"name": "Set",
													"nameLocations": [
														"8129:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 739,
													"src": "8129:3:6"
												},
												"referencedDeclaration": 739,
												"src": "8129:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:6",
									"nodeType": "StructDefinition",
									"scope": 1341,
									"src": "8101:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "8392:74:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "8414:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "8414:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1074,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1060,
																					"src": "8450:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1072,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1070,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1065,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "8409:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1079,
												"nodeType": "Return",
												"src": "8402:57:6"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8329:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1057,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1056,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "8329:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "8329:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8353:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:6"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "8386:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:6"
									},
									"scope": 1341,
									"src": "8316:150:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "8713:77:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "8738:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "8738:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1087,
																					"src": "8774:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1099,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1097,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1095,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1092,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "8730:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1106,
												"nodeType": "Return",
												"src": "8723:60:6"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "8650:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1083,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "8650:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "8650:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "8674:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:6"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "8707:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1089,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:6"
									},
									"scope": 1341,
									"src": "8634:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "8957:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1120,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "8984:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "8984:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1128,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1114,
																					"src": "9020:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1126,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1124,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1122,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1119,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "8974:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1133,
												"nodeType": "Return",
												"src": "8967:62:6"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "8889:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1110,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "8889:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "8889:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "8913:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "8951:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:6"
									},
									"scope": 1341,
									"src": "8871:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "9189:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1145,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "9214:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "9214:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1144,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "9206:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1148,
												"nodeType": "Return",
												"src": "9199:26:6"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "9133:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1137,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "9133:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "9133:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "9180:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:6"
									},
									"scope": 1341,
									"src": "9117:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "9657:73:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1168,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1154,
																						"src": "9702:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																							"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																						}
																					},
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:6",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1053,
																					"src": "9702:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$739_storage",
																						"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																					}
																				},
																				{
																					"id": 1170,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1156,
																					"src": "9714:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$739_storage",
																						"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1167,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "9698:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1165,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1163,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1161,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1175,
												"nodeType": "Return",
												"src": "9667:56:6"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "9586:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1152,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "9586:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "9586:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "9610:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:6"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "9648:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:6"
									},
									"scope": 1341,
									"src": "9574:156:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "10351:219:6",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1206,
														"src": "10361:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1189,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1190,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1193,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "10394:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage pointer"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1053,
															"src": "10394:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1192,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "10386:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:6"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1206,
														"src": "10415:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1199,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1200,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10501:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10515:15:6",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10525:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1201,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1191,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:6",
														"valueSize": 1
													}
												],
												"id": 1203,
												"nodeType": "InlineAssembly",
												"src": "10492:48:6"
											},
											{
												"expression": {
													"id": 1204,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1201,
													"src": "10557:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1205,
												"nodeType": "Return",
												"src": "10550:13:6"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "10286:22:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.AddressSet"
												},
												"typeName": {
													"id": 1180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1179,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1054,
														"src": "10286:10:6"
													},
													"referencedDeclaration": 1054,
													"src": "10286:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "10333:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1183,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1184,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:6"
									},
									"scope": 1341,
									"src": "10270:300:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSetUpgradeable.UintSet",
									"id": 1211,
									"members": [
										{
											"constant": false,
											"id": 1210,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1211,
											"src": "10617:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
												"typeString": "struct EnumerableSetUpgradeable.Set"
											},
											"typeName": {
												"id": 1209,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1208,
													"name": "Set",
													"nameLocations": [
														"10617:3:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 739,
													"src": "10617:3:6"
												},
												"referencedDeclaration": 739,
												"src": "10617:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$739_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:6",
									"nodeType": "StructDefinition",
									"scope": 1341,
									"src": "10592:42:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "10877:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1223,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "10899:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1210,
															"src": "10899:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1227,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "10919:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1225,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1222,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "10894:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1230,
												"nodeType": "Return",
												"src": "10887:39:6"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:6",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "10817:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1213,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "10817:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "10817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "10838:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:6"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "10871:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:6"
									},
									"scope": 1341,
									"src": "10804:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "11177:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1244,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "11202:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1210,
															"src": "11202:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "11222:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1246,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1243,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11194:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1251,
												"nodeType": "Return",
												"src": "11187:42:6"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:6",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "11117:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1234,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "11117:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "11117:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "11138:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:6"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "11171:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:6"
									},
									"scope": 1341,
									"src": "11101:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "11400:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1265,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "11427:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1210,
															"src": "11427:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1269,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "11447:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1267,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1264,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "11417:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1272,
												"nodeType": "Return",
												"src": "11410:44:6"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:6",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "11335:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1255,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "11335:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "11335:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "11356:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:6"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "11394:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:6"
									},
									"scope": 1341,
									"src": "11317:144:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "11611:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1284,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1278,
																"src": "11636:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1210,
															"src": "11636:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1283,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "11628:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1287,
												"nodeType": "Return",
												"src": "11621:26:6"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:6",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "11558:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1276,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "11558:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "11558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:6"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "11602:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:6"
									},
									"scope": 1341,
									"src": "11542:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "12076:55:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1303,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "12105:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																			"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:6",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1210,
																	"src": "12105:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$739_storage",
																		"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																	}
																},
																{
																	"id": 1305,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "12117:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$739_storage",
																		"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1302,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "12101:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1308,
												"nodeType": "Return",
												"src": "12086:38:6"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:6",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "12008:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "12008:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "12008:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "12029:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:6"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "12067:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:6"
									},
									"scope": 1341,
									"src": "11996:135:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "12749:219:6",
										"statements": [
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "12759:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1322,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1323,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1326,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "12792:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
																	"typeString": "struct EnumerableSetUpgradeable.UintSet storage pointer"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:6",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1210,
															"src": "12792:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$739_storage",
																"typeString": "struct EnumerableSetUpgradeable.Set storage ref"
															}
														],
														"id": 1325,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "12784:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$739_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:6"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1339,
														"src": "12813:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1332,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1333,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12899:39:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12913:15:6",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12923:5:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:6",
														"valueSize": 1
													},
													{
														"declaration": 1324,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:6",
														"valueSize": 1
													}
												],
												"id": 1336,
												"nodeType": "InlineAssembly",
												"src": "12890:48:6"
											},
											{
												"expression": {
													"id": 1337,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1334,
													"src": "12955:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1319,
												"id": 1338,
												"nodeType": "Return",
												"src": "12948:13:6"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:6",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "12687:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
													"typeString": "struct EnumerableSetUpgradeable.UintSet"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1211,
														"src": "12687:7:6"
													},
													"referencedDeclaration": 1211,
													"src": "12687:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1211_storage_ptr",
														"typeString": "struct EnumerableSetUpgradeable.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "12731:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1316,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1317,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:6"
									},
									"scope": 1341,
									"src": "12671:297:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1342,
							"src": "1329:11641:6",
							"usedErrors": []
						}
					],
					"src": "205:12766:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1365
						],
						"IERC165": [
							1377
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1366,
							"sourceUnit": 1378,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1377,
										"src": "754:7:7"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1365,
							"linearizedBaseContracts": [
								1365,
								1377
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1376
									],
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1356,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1358,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1377,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1377_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1377_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1357,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1377",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1355,
												"id": 1362,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1365,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1366,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1377
						]
					},
					"id": 1378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1377,
							"linearizedBaseContracts": [
								1377
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1377,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1378,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			"contract-creator/contracts/admin-controls/AdminControl.sol": {
				"ast": {
					"absolutePath": "contract-creator/contracts/admin-controls/AdminControl.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							630
						],
						"AdminControl": [
							1562
						],
						"ContextUpgradeable": [
							672
						],
						"ERC165": [
							1365
						],
						"ERC165Upgradeable": [
							716
						],
						"EnumerableSetUpgradeable": [
							1341
						],
						"IAdminControl": [
							1604
						],
						"IERC165": [
							1377
						],
						"IERC165Upgradeable": [
							728
						],
						"Initializable": [
							300
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 1563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1381,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 301,
							"src": "63:96:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1380,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 300,
										"src": "71:13:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"id": 1382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 717,
							"src": "163:87:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
							"id": 1383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1342,
							"src": "252:88:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 132,
							"src": "342:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contract-creator/contracts/admin-controls/IAdminControl.sol",
							"file": "./IAdminControl.sol",
							"id": 1385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 1605,
							"src": "419:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1386,
										"name": "Initializable",
										"nameLocations": [
											"486:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "486:13:9"
									},
									"id": 1387,
									"nodeType": "InheritanceSpecifier",
									"src": "486:13:9"
								},
								{
									"baseName": {
										"id": 1388,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"501:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "501:18:9"
									},
									"id": 1389,
									"nodeType": "InheritanceSpecifier",
									"src": "501:18:9"
								},
								{
									"baseName": {
										"id": 1390,
										"name": "IAdminControl",
										"nameLocations": [
											"521:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "521:13:9"
									},
									"id": 1391,
									"nodeType": "InheritanceSpecifier",
									"src": "521:13:9"
								},
								{
									"baseName": {
										"id": 1392,
										"name": "ERC165",
										"nameLocations": [
											"536:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "536:6:9"
									},
									"id": 1393,
									"nodeType": "InheritanceSpecifier",
									"src": "536:6:9"
								}
							],
							"canonicalName": "AdminControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1562,
							"linearizedBaseContracts": [
								1562,
								1365,
								1604,
								1377,
								131,
								672,
								300
							],
							"name": "AdminControl",
							"nameLocation": "470:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1397,
									"libraryName": {
										"id": 1394,
										"name": "EnumerableSetUpgradeable",
										"nameLocations": [
											"556:24:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1341,
										"src": "556:24:9"
									},
									"nodeType": "UsingForDirective",
									"src": "550:71:9",
									"typeName": {
										"id": 1396,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1395,
											"name": "EnumerableSetUpgradeable.AddressSet",
											"nameLocations": [
												"585:24:9",
												"610:10:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1054,
											"src": "585:35:9"
										},
										"referencedDeclaration": 1054,
										"src": "585:35:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
											"typeString": "struct EnumerableSetUpgradeable.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 1400,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "673:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "629:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
										"typeString": "struct EnumerableSetUpgradeable.AddressSet"
									},
									"typeName": {
										"id": 1399,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1398,
											"name": "EnumerableSetUpgradeable.AddressSet",
											"nameLocations": [
												"629:24:9",
												"654:10:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1054,
											"src": "629:35:9"
										},
										"referencedDeclaration": 1054,
										"src": "629:35:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1054_storage_ptr",
											"typeString": "struct EnumerableSetUpgradeable.AddressSet"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1364,
										1376
									],
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "861:125:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1411,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "879:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "IAdminControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "899:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAdminControl_$1604_$",
																			"typeString": "type(contract IAdminControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAdminControl_$1604_$",
																			"typeString": "type(contract IAdminControl)"
																		}
																	],
																	"id": 1412,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "894:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAdminControl_$1604",
																	"typeString": "type(contract IAdminControl)"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "914:11:9",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "894:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "879:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1419,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "966:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1417,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "942:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AdminControl_$1562_$",
																	"typeString": "type(contract super AdminControl)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "948:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1364,
															"src": "942:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "942:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "879:99:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1410,
												"id": 1422,
												"nodeType": "Return",
												"src": "872:106:9"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "689:58:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "762:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1407,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1405,
												"name": "ERC165",
												"nameLocations": [
													"829:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1365,
												"src": "829:6:9"
											},
											{
												"id": 1406,
												"name": "IERC165",
												"nameLocations": [
													"837:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1377,
												"src": "837:7:9"
											}
										],
										"src": "820:25:9"
									},
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "787:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "780:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1402,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:20:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1562,
									"src": "753:233:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "1019:133:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1427,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1038:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1038:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1429,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1049:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1053:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1049:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1038:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1434,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1080:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1084:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1080:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1432,
																		"name": "_admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "1063:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																			"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1071:8:9",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "1063:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																		"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1063:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1038:53:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e436f6e74726f6c3a204d757374206265206f776e6572206f722061646d696e",
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1093:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca6fc84f9a44d1110756284e5c56ff72cff80e2de6c9cfbe8379a88afa111687",
																"typeString": "literal_string \"AdminControl: Must be owner or admin\""
															},
															"value": "AdminControl: Must be owner or admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca6fc84f9a44d1110756284e5c56ff72cff80e2de6c9cfbe8379a88afa111687",
																"typeString": "literal_string \"AdminControl: Must be owner or admin\""
															}
														],
														"id": 1426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1030:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:102:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "1030:102:9"
											},
											{
												"id": 1441,
												"nodeType": "PlaceholderStatement",
												"src": "1143:1:9"
											}
										]
									},
									"id": 1443,
									"name": "adminRequired",
									"nameLocation": "1003:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:9"
									},
									"src": "994:158:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1587
									],
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "1231:71:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1451,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "1250:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1250:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1453,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "1261:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1250:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1457,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1445,
																		"src": "1287:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1455,
																		"name": "_admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "1270:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																			"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																		}
																	},
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1278:8:9",
																	"memberName": "contains",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "1270:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																		"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1270:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1250:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1460,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1249:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1450,
												"id": 1461,
												"nodeType": "Return",
												"src": "1242:52:9"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1172:7:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1202:8:9"
									},
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1188:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1180:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:15:9"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "1225:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1225:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:6:9"
									},
									"scope": 1562,
									"src": "1163:139:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1593
									],
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "1388:189:9",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1470,
														"name": "admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1468,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1474,
																		"name": "_admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "1422:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																			"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																		}
																	},
																	"id": 1475,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1430:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1150,
																	"src": "1422:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																		"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "1408:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1412:7:9",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1472,
																"nodeType": "ArrayTypeName",
																"src": "1412:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1408:31:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "1399:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "1399:40:9"
											},
											{
												"body": {
													"id": 1501,
													"nodeType": "Block",
													"src": "1494:52:9",
													"statements": [
														{
															"expression": {
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1492,
																		"name": "admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1468,
																		"src": "1509:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 1494,
																	"indexExpression": {
																		"id": 1493,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1481,
																		"src": "1516:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1509:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1497,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1481,
																			"src": "1532:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1495,
																			"name": "_admins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "1521:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																				"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																			}
																		},
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1529:2:9",
																		"memberName": "at",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1177,
																		"src": "1521:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																			"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,uint256) view returns (address)"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1521:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1509:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1500,
															"nodeType": "ExpressionStatement",
															"src": "1509:25:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1484,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "1467:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1485,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "1471:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1479:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1150,
															"src": "1471:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer) view returns (uint256)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1471:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1467:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1502,
												"initializationExpression": {
													"assignments": [
														1481
													],
													"declarations": [
														{
															"constant": false,
															"id": 1481,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1460:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1502,
															"src": "1455:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1480,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1455:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1483,
													"initialValue": {
														"hexValue": "30",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1464:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1455:10:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1489:3:9",
														"subExpression": {
															"id": 1489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "1489:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ExpressionStatement",
													"src": "1489:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1450:96:9"
											},
											{
												"expression": {
													"id": 1503,
													"name": "admins",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1468,
													"src": "1563:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1504,
												"nodeType": "Return",
												"src": "1556:13:9"
											}
										]
									},
									"functionSelector": "31ae450b",
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmins",
									"nameLocation": "1319:9:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1345:8:9"
									},
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:9"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "admins",
												"nameLocation": "1380:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "1363:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1466,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1363:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1467,
													"nodeType": "ArrayTypeName",
													"src": "1363:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:25:9"
									},
									"scope": 1562,
									"src": "1310:267:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1598
									],
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "1650:145:9",
										"statements": [
											{
												"condition": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1665:24:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1516,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "1683:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1514,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "1666:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																	"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1674:8:9",
															"memberName": "contains",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1135,
															"src": "1666:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1666:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1532,
												"nodeType": "IfStatement",
												"src": "1661:127:9",
												"trueBody": {
													"id": 1531,
													"nodeType": "Block",
													"src": "1691:97:9",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1520,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "1725:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1521,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1732:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1736:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1732:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1519,
																	"name": "AdminApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "1711:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1711:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1524,
															"nodeType": "EmitStatement",
															"src": "1706:37:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1528,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "1770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1525,
																		"name": "_admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "1758:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																			"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:3:9",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1081,
																	"src": "1758:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																		"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1758:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1530,
															"nodeType": "ExpressionStatement",
															"src": "1758:18:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6d73e669",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1511,
												"name": "onlyOwner",
												"nameLocations": [
													"1640:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1640:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1640:9:9"
										}
									],
									"name": "approveAdmin",
									"nameLocation": "1594:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1510,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1631:8:9"
									},
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1615:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1607:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:15:9"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:0:9"
									},
									"scope": 1562,
									"src": "1585:210:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1603
									],
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "1867:146:9",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1544,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "1899:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1542,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "1882:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1890:8:9",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "1882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
															"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "1878:128:9",
												"trueBody": {
													"id": 1558,
													"nodeType": "Block",
													"src": "1907:99:9",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1547,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "1940:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1548,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1947:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1951:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1947:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1546,
																	"name": "AdminRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "1927:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address)"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1927:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "EmitStatement",
															"src": "1922:36:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1555,
																		"name": "admin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1536,
																		"src": "1988:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1552,
																		"name": "_admins",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "1973:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressSet_$1054_storage",
																			"typeString": "struct EnumerableSetUpgradeable.AddressSet storage ref"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1981:6:9",
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1108,
																	"src": "1973:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1054_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$1054_storage_ptr_$",
																		"typeString": "function (struct EnumerableSetUpgradeable.AddressSet storage pointer,address) returns (bool)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1973:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1557,
															"nodeType": "ExpressionStatement",
															"src": "1973:21:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2d345670",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1539,
												"name": "onlyOwner",
												"nameLocations": [
													"1857:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1857:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1857:9:9"
										}
									],
									"name": "revokeAdmin",
									"nameLocation": "1812:11:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1538,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1848:8:9"
									},
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1832:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1824:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:9"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1867:0:9"
									},
									"scope": 1562,
									"src": "1803:210:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1563,
							"src": "452:1564:9",
							"usedErrors": []
						}
					],
					"src": "35:1981:9"
				},
				"id": 9
			},
			"contract-creator/contracts/admin-controls/IAdminControl.sol": {
				"ast": {
					"absolutePath": "contract-creator/contracts/admin-controls/IAdminControl.sol",
					"exportedSymbols": {
						"ERC165": [
							1365
						],
						"IAdminControl": [
							1604
						],
						"IERC165": [
							1377
						]
					},
					"id": 1605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1564,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"id": 1565,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 1366,
							"src": "88:64:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1567,
										"name": "IERC165",
										"nameLocations": [
											"230:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1377,
										"src": "230:7:10"
									},
									"id": 1568,
									"nodeType": "InheritanceSpecifier",
									"src": "230:7:10"
								}
							],
							"canonicalName": "IAdminControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1566,
								"nodeType": "StructuredDocumentation",
								"src": "156:45:10",
								"text": " @dev Interface for admin control"
							},
							"fullyImplemented": false,
							"id": 1604,
							"linearizedBaseContracts": [
								1604,
								1377
							],
							"name": "IAdminControl",
							"nameLocation": "213:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "7e1a1a08d52e4ba0e21554733d66165fd5151f99460116223d9e3a608eec5cb1",
									"id": 1574,
									"name": "AdminApproved",
									"nameLocation": "253:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "283:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "267:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "308:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "292:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:49:10"
									},
									"src": "247:69:10"
								},
								{
									"anonymous": false,
									"eventSelector": "7c0c3c84c67c85fcac635147348bfe374c24a1a93d0366d1cfe9d8853cbf89d5",
									"id": 1580,
									"name": "AdminRevoked",
									"nameLocation": "328:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "341:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "382:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "366:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:49:10"
									},
									"src": "322:68:10"
								},
								{
									"functionSelector": "24d7806c",
									"id": 1587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "407:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "423:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "415:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "414:15:10"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "453:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:6:10"
									},
									"scope": 1604,
									"src": "398:61:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31ae450b",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmins",
									"nameLocation": "474:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "483:2:10"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "509:16:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1589,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "509:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1590,
													"nodeType": "ArrayTypeName",
													"src": "509:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:18:10"
									},
									"scope": 1604,
									"src": "465:62:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6d73e669",
									"id": 1598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAdmin",
									"nameLocation": "542:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "563:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "555:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:15:10"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:0:10"
									},
									"scope": 1604,
									"src": "533:46:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d345670",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeAdmin",
									"nameLocation": "594:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "614:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "606:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:15:10"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "629:0:10"
									},
									"scope": 1604,
									"src": "585:45:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1605,
							"src": "203:430:10",
							"usedErrors": []
						}
					],
					"src": "35:598:10"
				},
				"id": 10
			}
		}
	}
}